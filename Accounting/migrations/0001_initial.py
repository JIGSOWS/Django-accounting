# Generated by Django 5.1.4 on 2025-02-05 11:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=50)),
                ('total_debt', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=250, unique=True)),
                ('issatup', models.BooleanField(default=False)),
                ('budget', models.FloatField(default=0)),
                ('password_reset_code', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('is_staff', models.BooleanField(default=False, editable=False)),
                ('is_superuser', models.BooleanField(default=False, editable=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, editable=False, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='accounting_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, editable=False, help_text='Specific permissions for this user.', related_name='accounting_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supply_name', models.CharField(max_length=50)),
                ('unit', models.CharField(default='Peace', max_length=10)),
                ('countity', models.FloatField(default=0)),
                ('buy_price', models.FloatField(default=0)),
                ('sell_price', models.FloatField(default=0)),
                ('type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Accounting.type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countity', models.FloatField()),
                ('price', models.FloatField()),
                ('total', models.FloatField(default=0)),
                ('date', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Accounting.supplies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reciept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countity', models.FloatField()),
                ('buy_price', models.FloatField()),
                ('sell_price', models.FloatField()),
                ('total', models.FloatField(default=0)),
                ('date', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Accounting.supplies')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Accounting.type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money_for', models.CharField(max_length=250)),
                ('total', models.FloatField(default=0)),
                ('date', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MoneyIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField(default=0)),
                ('date', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('money_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Accounting.customername')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MoneyFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permanant_fund', models.FloatField(default=0)),
                ('sells_fund', models.FloatField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_countity', models.FloatField(blank=True)),
                ('final_countity', models.FloatField(blank=True)),
                ('initial_fund', models.FloatField(blank=True)),
                ('final_fund', models.FloatField(blank=True)),
                ('sales_countity', models.FloatField(blank=True, default=0)),
                ('purchase_countity', models.FloatField(blank=True, default=0)),
                ('debt_countity', models.FloatField(blank=True, default=0)),
                ('unpaid_customers', models.TextField(blank=True)),
                ('discrepancy', models.FloatField(blank=True, default=0)),
                ('dispatched_supply', models.FloatField(blank=True, default=0)),
                ('dispatched_value', models.FloatField(blank=True, default=0)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('inventory_date', models.DateField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Accounting.supplies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=50)),
                ('date_of_employment', models.DateField(blank=True, null=True)),
                ('salary', models.FloatField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DispatchSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countity', models.FloatField(default=0)),
                ('buy_price', models.FloatField(default=0)),
                ('dispatch_date', models.DateField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=400, null=True)),
                ('supply', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Accounting.supplies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customername',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_buying', models.DateField(blank=True, null=True)),
                ('price', models.FloatField(default=0)),
                ('countity', models.FloatField(default=0)),
                ('total', models.FloatField(default=0, editable=False)),
                ('debt', models.FloatField(blank=True, default=0, null=True)),
                ('paid', models.FloatField(blank=True, default=0, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('customer_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Accounting.customername')),
                ('supply', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Accounting.supplies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='type',
            constraint=models.UniqueConstraint(fields=('user', 'type'), name='unique_user_type'),
        ),
        migrations.AddConstraint(
            model_name='supplies',
            constraint=models.UniqueConstraint(fields=('user', 'supply_name'), name='unique_user_supply'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(fields=('user', 'employee_name'), name='unique_user_employee_name'),
        ),
        migrations.AddConstraint(
            model_name='customername',
            constraint=models.UniqueConstraint(fields=('user', 'customer_name'), name='unique_user_customer_name'),
        ),
    ]
